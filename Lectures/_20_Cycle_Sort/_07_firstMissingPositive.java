package _20_Cycle_Sort;import java.util.Arrays;//https://leetcode.com/problems/first-missing-positive/description///41. First Missing Positivepublic class _07_firstMissingPositive {    public static void main(String[] args) {        int [] nums = {7,8,9,11,12};        System.out.println(firstMissingPositive(nums));    }    public static int firstMissingPositive(int[] nums) {        int i = 0;        while (i < nums.length) {            int correctIndex = nums[i] - 1;            if (nums[i] > 0 && nums[i] <= nums.length && nums[i] != nums[correctIndex]){                swap(nums, i, correctIndex);            }else {                i++;            }        }//        System.out.println(Arrays.toString(nums));        for(int j = 0; j < nums.length; j++){            if(nums[j] != j){                return j+1;            }        }        return nums.length+1;    }    private static void swap(int[] arr, int source, int dest) {        int temp = arr[source];        arr[source] = arr[dest];        arr[dest] = temp;    }}